---
layout: post
title: Emacs setup for scala
comments: true
categories: 
- scala
- emacs
- ensime
---

!>http://1.bp.blogspot.com/_A7vd1oW85hU/Rod-V4fAaxI/AAAAAAAABHw/jIiZMPqiw7U/s320/IMG_2415.JPG!

Многие, кто начинает пробовать работать на скале, после того как дойдут до создания чего-то большего, чем джейсон парсер, начинают задаваться вопросом выбора среды разработки. Обычно эти поиски заканчиваются разочарованием: эклипс глючный, идея не умеет выводить типы для всего, сложнее вышеупомянутого джейсон парсера и перекрашивает кучу валидного кода красным, нетбинз тоже оставляет желать лучшего. Я некоторое время тому открыл для себя емакс. Последний год я использовал его исключительно как органайзер и джаббер-клиент. Но когда сменил работу на имеющую отношение к скале и настало время выбрать среду разработки, вспомнил о своём "джаббер-клиенте".

Быстрый гуглёж показал, что существует некий "ensime-mode":http://aemon.com/file_dump/ensime_manual.html. Вопреки устоявшемуся мнению насчёт емакса вообще и его конфигов в частности, установить и начать играться с этой штукой проще простого.

Я пользуюсь emacs starter kit'ом. Правда, уже не помню, каким именно: на каждом новом компьютере я просто делаю <code>sudo apt-get install emacs</code>, после чего копирую свою забекапленную директорию <code>.emacs.d</code> в <code>~</code>. Если вы ещё не выбрали себе стартер-кит, советую обратить внимание на "вот этот":https://github.com/zahardzhan/emacs-starter-kit (немного о нём "там":http://zahardzhan.github.com/2010/emacs-starter-kit-the-program.html).

Итак, после установки емакса, "ставим скалу":http://www.scala-lang.org/node/201. В директории <code>$SCALA_HOME/misc/scala-tool-support</code> есть директория <code>emacs</code>. Копируем её содержимое в <code>~/.emacs.d/scala-mode</code>. Качаем новенькую версию "ensime-mode":https://github.com/aemoncannon/ensime/downloads и распаковываем её в <code>~/.emacs.d/ensime</code>. Дальше открываем свой <code>custom.el</code> (<code>init.el</code> для тех, кто не пользуется starter-kit'ами), и добавляем туда следующее:

{% highlight scheme %}
;; Load scala mode
(add-to-list 'load-path (concat dotfiles-dir "/scala-mode"))
(require 'scala-mode-auto)

;; Load ensime mode
(add-to-list 'load-path (concat dotfiles-dir "/ensime/elisp"))
(require 'ensime)

;; This step causes the ensime-mode to be started whenever
;; scala-mode is started for a buffer.
(add-hook 'scala-mode-hook 'ensime-scala-mode-hook)
(setq exec-path (append exec-path
	(list "/path-to-scala/scala-2.9.0.1/bin" )))
{% endhighlight %}

Далее импортируем (или создаём новый) проект: выполняем <code>M-x ensime</code> и следуем инструкциям. После того как ензим создал файл описания проекта (<code>.ensime</code>), выполняем <code>M-x ensime</code> ещё раз, указав расположение нашего нового файла, ждём, когда всё подгрузится и стартанёт. Ензим встретит нас чем-то вроде <code>Hacks and glory await!</code>. Теперь можно смело начинать кодить. Автокомплит вызывается TAB'ом, полный список команд и клавиатурных сокращений -- "тут":http://aemon.com/file_dump/ensime_manual.html#tth_sEc4.11.

К слову, список фраз-приветствий энзима можно посмотреть (и дополнить) в файле <code>ensime.el</code>. Стандартное содержание выглядит следующим образом:

{% highlight scheme %}
;;; Words of encouragement

(defun ensime-user-first-name ()
  (let ((name (if (string= (user-full-name) "")
		  (user-login-name)
		(user-full-name))))
    (string-match "^[^ ]*" name)
    (capitalize (match-string 0 name))))

(defvar ensime-words-of-encouragement
  `("Let the hacking commence!"
    "Hacks and glory await!"
    "Hack and be merry!"
    "May the source be with you!"
    "Death to null!"
    "Find closure!"
    "May the _ be with you."
    "M-x be_cool"
    "CanBuildFrom[List[Dream], Reality, List[Reality]]"
    ,(format "%s, this could be the start of a beautiful program."
	     (ensime-user-first-name)))
  "Scientifically-proven optimal words of hackerish encouragement.")

(defun ensime-random-words-of-encouragement ()
  "Return a string of hackerish encouragement."
  (eval (nth (random (length ensime-words-of-encouragement))
	     ensime-words-of-encouragement)))
{% endhighlight %}

Удачи.
