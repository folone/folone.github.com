---
layout: fullwidth
title: Recursion Schemes
comments: true
categories: 
- resursion
- cheat sheet
- fp
---
<p align="right">Морфизм (стрелка) — в общем смысле преобразование любого рода из одного объекта категории в другой.</p>

С целью получить и углубить понимание темы, составил такую вот табличку (референсом служила "вот эта таблица":http://comonad.com/reader/2009/recursion-schemes/):

table{border:1px solid black}.
{background:#ddd}.|\4=.Folds|
|_.Схема|_.Код|_.Описание|_.Краткий пример|
|"катаморфизм":http://en.wikipedia.org/wiki/Catamorphism|"Cata":http://comonad.com/haskell/category-extras/src/Control/Morphism/Cata.hs|обобщение свёртки списков на произвольные алгебраические типы данных|foldr|
|"параморфизм":http://en.wikipedia.org/wiki/Paramorphism|"Para":http://comonad.com/haskell/category-extras/src/Control/Morphism/Para.hs|свёртка списка при помощи примитивной рекурсии (?)|dropWhile|
|зигоморфизм|"Zygo":http://comonad.com/haskell/category-extras/src/Control/Morphism/Zygo.hs|свёртка списка при помощи вспомогательной функции (?)||
|хистоморфизм|"Histo":http://comonad.com/haskell/category-extras/src/Control/Morphism/Histo.hs|свёрка списка на основе предыдущих вызовов (?)||
|препроморфизм|"Prepro":http://comonad.com/haskell/category-extras/src/Control/Morphism/Prepro.hs| свёртка списка после последовательного применения натурального преобразования (?)||
{background:#ddd}.|\4=.Unfolds|
|_.Схема|_.Код|_.Описание|_.Краткий пример|
|"анаморфизм":http://en.wikipedia.org/wiki/Anamorphism|"Ana":http://comonad.com/haskell/category-extras/src/Control/Morphism/Ana.hs|обобщение разворачивания списков на произвольные алгебраические типы данных|unfold|
|"апоморфизм":http://en.wikipedia.org/wiki/Apomorphism|"Apo":http://comonad.com/haskell/category-extras/src/Control/Morphism/Apo.hs|"корекурсия":http://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D0%B5%D0%BA%D1%83%D1%80%D1%81%D0%B8%D1%8F . собирается список по одному уровню за итерацию.|zip, iterate|
|футуморфизм|"Futu":http://comonad.com/haskell/category-extras/src/Control/Morphism/Futu.hs|собирается несколько уровней за одну итерацию (?)||
|постпроморфизм|"Postpro":http://comonad.com/haskell/category-extras/src/Control/Morphism/Postpro.hs|разворачивается список и последовательно применяется натуральное преобразование (?)||
{background:#ddd}.|\4=.Refolds|
|_.Схема|_.Код|_.Описание|_.Краткий пример|
|"хиломорфизм":http://en.wikipedia.org/wiki/Hylomorphism_(computer_science)|"Hylo":http://comonad.com/haskell/category-extras/src/Control/Morphism/Hylo.hs|анаморфизм + катаморфизм|fact n = product [1..n]|
|хрономорфизм|"Chrono":http://comonad.com/haskell/category-extras/src/Control/Morphism/Chrono.hs|футуморфизм + хистоморфизм (?)||
|синхрономорфизм|"Synchro":http://comonad.com/haskell/category-extras/src/Control/Morphism/Synchro.hs|высокоуровневое преобразование между двумя структурами, которое использует третью структуру для получения промежуточных данных (?)||
|экзоморфизм|"Exo":http://comonad.com/haskell/category-extras/src/Control/Morphism/Exo.hs|высокоуровневое преобразование между структурами из триалгебры в биалгебру (?)||
|метаморфизм|"Erwig":http://comonad.com/haskell/category-extras/src/Control/Morphism/Meta/Erwig.hs|хиломорфизм, выраженный в терминах биалгебры (?)||
|метаморфизм|"Gibbons":http://comonad.com/haskell/category-extras/src/Control/Morphism/Meta/Gibbons.hs|fold . unfold; изменение репрезентации (?)||
|динаморфизм|"Dyna":http://comonad.com/haskell/category-extras/src/Control/Morphism/Dyna.hs|анаморфизм + хистоморфизм (?)||
|Elgot алгебра|"Elgot":http://comonad.com/haskell/category-extras/src/Control/Functor/Algebra/Elgot.hs|во время fold'а может остановиться (?)||
|Elgot коалгебра|"Elgot":http://comonad.com/haskell/category-extras/src/Control/Functor/Algebra/Elgot.hs|во время unfold'а может остановиться (?)||
